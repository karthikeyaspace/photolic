// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL") for supabase connection
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String       @unique
  image         String?
  accounts      Account[]
  sessions      Session[]
  generations   Generation[]
  credits       Int          @default(0)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Generation {
  id                   String   @id @default(cuid())
  userId               String
  url                  String
  count                Int      @default(autoincrement())
  seed                 Int?
  prompt               String
  aspectRatio          String
  model                String
  disableSafetyChecker Boolean  @default(false)
  isSaved              Boolean  @default(false)
  isDeleted            Boolean  @default(false)
  createdAt            DateTime @default(now())
  user                 User     @relation(fields: [userId], references: [id])
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
